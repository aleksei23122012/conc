import os
import logging
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import Application, CommandHandler, ContextTypes, CallbackQueryHandler
from supabase import create_client, Client

# –í–∫–ª—é—á–∞–µ–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
logging.basicConfig(
    format="%(asctime)s - %(name)s - %(levelname)s - %(message)s", level=logging.INFO
)
logger = logging.getLogger(__name__)

# --- –ü–æ–ª—É—á–∞–µ–º –∫–ª—é—á–∏ –¥–æ—Å—Ç—É–ø–∞ –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è (–±–æ–ª–µ–µ –±–µ–∑–æ–ø–∞—Å–Ω–æ) ---
try:
    BOT_TOKEN = os.environ['BOT_TOKEN']
    SUPABASE_URL = os.environ['SUPABASE_URL']
    SUPABASE_KEY = os.environ['SUPABASE_KEY']
except KeyError:
    logger.error("–ö–ª—é—á–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã! –î–æ–±–∞–≤—å—Ç–µ BOT_TOKEN, SUPABASE_URL, SUPABASE_KEY –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è.")
    exit()

# --- –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –∫–ª–∏–µ–Ω—Ç Supabase ---
supabase: Client = create_client(SUPABASE_URL, SUPABASE_KEY)

# --- URL –¥–ª—è Web Apps (–∏–∑ –≤–∞—à–µ–≥–æ –∫–æ–¥–∞) ---
URL_KNOWLEDGE_BASE = "https://aleksei23122012.teamly.ru/space/00647e86-cd4b-46ef-9903-0af63964ad43/article/17e16e2a-92ff-463c-8bf4-eaaf202c0bc7"
URL_DASHBOARD = "https://aleksei23122012.github.io/DMdashbordbot/conc/conc.html"
URL_ALMANAC = "https://aleksei23122012.github.io/DMdashbordbot/ov/ov.html"
URL_OTZIV = "https://forms.gle/KML4YXA4osd6aaWS7"

# --- –ù–û–í–´–ô –§–£–ù–ö–¶–ò–û–ù–ê–õ: –ê–í–¢–û–†–ò–ó–ê–¶–ò–Ø ---

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start. –ù–∞—á–∏–Ω–∞–µ—Ç –ø—Ä–æ—Ü–µ—Å—Å –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
    """
    user = update.effective_user
    logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user.username} (ID: {user.id}) –Ω–∞–∂–∞–ª /start.")

    # 1. –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ –≤ —Ç–∞–±–ª–∏—Ü—É 'users'
    try:
        supabase.table('users').insert({
            'telegram_id': user.id,
            'telegram_username': user.username
        }).execute()
        logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user.username} –¥–æ–±–∞–≤–ª–µ–Ω/–æ–±–Ω–æ–≤–ª–µ–Ω –≤ —Ç–∞–±–ª–∏—Ü–µ 'users'.")
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ 'users': {e}")
        # –ù–µ –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø—Ä–æ—Ü–µ—Å—Å, –¥–∞–∂–µ –µ—Å–ª–∏ –∑–∞–ø–∏—Å—å –Ω–µ —É–¥–∞–ª–∞—Å—å (–Ω–∞–ø—Ä–∏–º–µ—Ä, –∏–∑-–∑–∞ –¥—É–±–ª–∏–∫–∞—Ç–∞)

    # 2. –ò—â–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —Ç–∞–±–ª–∏—Ü–µ 'persinfo' –ø–æ –µ–≥–æ telegram_username
    try:
        response = supabase.table('persinfo').select('full_name, city, team').eq('telegram_username', user.username).execute()
        
        if not response.data:
            # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ —Ç–∞–±–ª–∏—Ü–µ persinfo
            await update.message.reply_text(
                "–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ! –Ø –Ω–µ —Å–º–æ–≥ –Ω–∞–π—Ç–∏ –≤–∞—Å –≤ –±–∞–∑–µ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤. "
                "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤–∞—à –ª–æ–≥–∏–Ω –≤ Telegram —É–∫–∞–∑–∞–Ω –≤–µ—Ä–Ω–æ, –∏ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É @Aleksei_Li_Radievich"
            )
            return

        # 3. –ï—Å–ª–∏ –Ω–∞–π–¥–µ–Ω, —Ñ–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ–º
        employee_data = response.data[0]
        full_name = employee_data.get('full_name', '–ò–º—è –Ω–µ –Ω–∞–π–¥–µ–Ω–æ')
        city = employee_data.get('city', '–ì–æ—Ä–æ–¥ –Ω–µ –Ω–∞–π–¥–µ–Ω')
        team = employee_data.get('team', '–ö–æ–º–∞–Ω–¥–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞')
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç –¥–ª—è –ø–æ—Å–ª–µ–¥—É—é—â–µ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
        context.user_data['employee_info'] = employee_data

        text = f"–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, {full_name}! –í—ã –∏–∑ –≥–æ—Ä–æ–¥–∞ {city}, –ö–æ–º–∞–Ω–¥–∞ {team}, –≤–µ—Ä–Ω–æ?"
        
        keyboard = [
            [
                InlineKeyboardButton("–î–∞, –≤—Å—ë –≤–µ—Ä–Ω–æ", callback_data="auth_yes"),
                InlineKeyboardButton("–ù–µ—Ç, –Ω–µ –≤–µ—Ä–Ω–æ", callback_data="auth_no"),
            ]
        ]
        reply_markup = InlineKeyboardMarkup(keyboard)
        
        await update.message.reply_text(text, reply_markup=reply_markup)

    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∏—Å–∫–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ 'persinfo': {e}")
        await update.message.reply_text("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –≤–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ –∏–ª–∏ —Å–≤—è–∂–∏—Ç–µ—Å—å —Å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º.")

async def button_callback(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ inline-–∫–Ω–æ–ø–∫–∏.
    """
    query = update.callback_query
    await query.answer() # –û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ, —á—Ç–æ–±—ã —É–±—Ä–∞—Ç—å "—á–∞—Å–∏–∫–∏" —Å –∫–Ω–æ–ø–∫–∏

    if query.data == "auth_yes":
        # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–æ–¥—Ç–≤–µ—Ä–¥–∏–ª —Å–≤–æ–∏ –¥–∞–Ω–Ω—ã–µ, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        await query.edit_message_text(text="–û—Ç–ª–∏—á–Ω–æ! –†–∞–¥ –∑–Ω–∞–∫–æ–º—Å—Ç–≤—É.")
        await send_welcome_and_menu(update, context)
    
    elif query.data == "auth_no":
        # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –ø–æ–¥—Ç–≤–µ—Ä–¥–∏–ª –¥–∞–Ω–Ω—ã–µ
        await query.edit_message_text(text="–•–º, —Å—Ç—Ä–∞–Ω–Ω–æ. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞–ø–∏—à–∏—Ç–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É @Aleksei_Li_Radievich")

async def send_welcome_and_menu(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """
    –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏ –æ—Å–Ω–æ–≤–Ω–æ–µ –º–µ–Ω—é.
    –≠—Ç–æ –≤–∞—à —Å—Ç–∞—Ä—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ /start.
    """
    # –ò—Å–ø–æ–ª—å–∑—É–µ–º update.effective_chat.id, —Ç–∞–∫ –∫–∞–∫ –ø–æ—Å–ª–µ –∫–Ω–æ–ø–∫–∏ update.message –±—É–¥–µ—Ç None
    chat_id = update.effective_chat.id
    
    welcome_text = (
        "–ü—Ä–∏–≤–µ—Ç! üëã\n\n–Ø - —Ç–≤–æ–π –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –∫–æ–Ω—Å—å–µ—Ä–∂ü§µ. –ß—Ç–æ–±—ã –æ—Ç–∫—Ä—ã—Ç—å –º–µ–Ω—é —Å –æ—Å–Ω–æ–≤–Ω—ã–º–∏ —Ñ—É–Ω–∫—Ü–∏—è–º–∏, –Ω–∞–∂–º–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É ü™Ñ –ú–µ–Ω—é –∏–ª–∏ –æ—Ç–ø—Ä–∞–≤—å –≤ —á–∞—Ç –∫–æ–º–∞–Ω–¥—É /menu\n\n"
        "‚ú®–ß—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å —à–∞–±–ª–æ–Ω –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –æ—Ç—á–µ—Ç–∞ –≤–≤–µ–¥–∏ \n"
        "/breakfast , /lunch –∏–ª–∏ /dinner ü•®\n\n"
        "‚ú®–Ø –±—É–¥—É –ø–µ—Ä–µ–¥–∞–≤–∞—Ç—å –¥–ª—è —Ç–µ–±—è –≤–∞–∂–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è, —Ç–∞–∫ —á—Ç–æ –Ω–µ –∑–∞–±—É–¥—å –≤–∫–ª—é—á–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è üîî\n\n"
        "‚ú®–¢–∞–∫–∂–µ —è –ø–æ–º–æ–≥—É —Ç–µ–±–µ –ø—Ä–æ—Å–º–∞—Ç—Ä–∏–≤–∞—Ç—å —Å–≤–æ–∏ –ø–æ–∫–∞–∑–∞—Ç–µ–ª–∏, –±—É–¥—É –¥–∞–≤–∞—Ç—å —Ç–µ–±–µ —Å–æ–≤–µ—Ç—ã, –ø–æ–º–æ–≥—É —Å –æ—Ç—Ä–∞–±–æ—Ç–∫–æ–π –≤–æ–∑—Ä–∞–∂–µ–Ω–∏–π üìí\n\n"
        "‚ú®–ê –µ—Å–ª–∏ —Ç—ã –∑–∞—Ö–æ—á–µ—à—å –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–∏—Ç—å –æ–±—Ä–∞—Ç–Ω—É—é —Å–≤—è–∑—å - —è –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –ø–µ—Ä–µ–¥–∞–º –µ–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É ‚úçÔ∏è\n\n"
        "–•–æ—Ä–æ—à–µ–≥–æ –¥–Ω—è!‚òÄÔ∏è"
    )
    await context.bot.send_message(chat_id=chat_id, text=welcome_text)
    # –ú–æ–∂–Ω–æ —Å—Ä–∞–∑—É –∂–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∏ –º–µ–Ω—é
    await menu(update, context)


# --- –í–ê–®–ò –°–¢–ê–†–´–ï –§–£–ù–ö–¶–ò–ò (–æ—Å—Ç–∞—é—Ç—Å—è –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π) ---

async def menu(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    keyboard = [
        [InlineKeyboardButton("–î–∞—à–±–æ—Ä–¥", web_app={"url": URL_DASHBOARD})],
        [InlineKeyboardButton("–û—Ç—Ä–∞–±–æ—Ç–∫–∞ –≤–æ–∑—Ä–∞–∂–µ–Ω–∏–π", web_app={"url": URL_ALMANAC})],
        [InlineKeyboardButton("–ë–∞–∑–∞ –∑–Ω–∞–Ω–∏–π", web_app={"url": URL_KNOWLEDGE_BASE})],
        [InlineKeyboardButton("–û—Ç–∑—ã–≤—ã –∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è", web_app={"url": URL_OTZIV})]
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)
    await update.effective_chat.send_message( # –ò—Å–ø–æ–ª—å–∑—É–µ–º effective_chat –¥–ª—è —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–æ—Å—Ç–∏
        "–ö–æ–Ω—Å—å–µ—Ä–∂ –Ω–∞ —Å–≤—è–∑–∏. ü§µ\n\n–í—ã–±–∏—Ä–∞–π, —á—Ç–æ —Ö–æ—á–µ—à—å —É–∑–Ω–∞—Ç—å –∏–ª–∏ —Å–¥–µ–ª–∞—Ç—å:\n\n"
        "‚ú® –î–∞—à–±–æ—Ä–¥ ‚Äî –≤—Å—è –≤–∞–∂–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è —É —Ç–µ–±—è –ø–æ–¥ —Ä—É–∫–æ–π.\n"
        "‚ú® –û—Ç—Ä–∞–±–æ—Ç–∫–∞ –≤–æ–∑—Ä–∞–∂–µ–Ω–∏–π ‚Äî –ª–∞–π—Ñ—Ö–∞–∫–∏ –∏ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏.\n"
        "‚ú® –ë–∞–∑–∞ –∑–Ω–∞–Ω–∏–π ‚Äî –ø–æ–ª–µ–∑–Ω—ã–µ —Å—Ç–∞—Ç—å–∏ –∏ —Å–æ–≤–µ—Ç—ã.\n"
        "‚ú® –û—Ç–∑—ã–≤—ã –∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è ‚Äî –ø–æ–¥–µ–ª–∏—Å—å –æ–±—Ä–∞—Ç–Ω–æ–π —Å–≤—è–∑—å—é!\n"
        "‚ú® –ö–æ–º–∞–Ω–¥—ã –¥–ª—è –æ—Ç—á–µ—Ç–æ–≤: /breakfast /lunch /dinner\n",
        reply_markup=reply_markup
    )

# ... (–∑–¥–µ—Å—å –≤–∞—à–∏ —Ñ—É–Ω–∫—Ü–∏–∏ breakfast, lunch, dinner, admin - —è –∏—Ö —É–±—Ä–∞–ª –¥–ª—è –∫—Ä–∞—Ç–∫–æ—Å—Ç–∏, –ø—Ä–æ—Å—Ç–æ —Å–∫–æ–ø–∏—Ä—É–π—Ç–µ –∏—Ö –∏–∑ –≤–∞—à–µ–≥–æ —Å—Ç–∞—Ä–æ–≥–æ –∫–æ–¥–∞) ...
async def breakfast(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —à–∞–±–ª–æ–Ω –¥–ª—è –∑–∞–≤—Ç—Ä–∞–∫–∞."""
    breakfast_text = (
        "–ù–µ –∑–∞–±—É–¥—å —Å–∫–æ—Ä—Ä–µ–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –¥–∞–Ω–Ω—ã–µ –Ω–∞ —Å–≤–æ–∏!\n\n\n"
        "–ü–õ–ê–ù 26.06.2025\n\n"
        "–õ–ò–î–´: 6\n"
        "–¢–†–ê–§–ò–ö: 03:00:00\n"
        "–ö–ó: 300\n\n"
        "<b>#–ò–º—è–§–∞–º–∏–ª–∏—è</b>\n"
        "#–ê–ª–µ–∫—Å–µ–π\n"
        "#–°–ü–ë\n"
        "#–°–¢\n"
        "@Aleksei_Li_Radievich\n"
        "@–õ–æ–≥–∏–Ω —Ç–∏–º–ª–∏–¥–∞ –≤ –¢–ì (–µ—Å–ª–∏ –µ—Å—Ç—å)"
    )
    await update.message.reply_text(breakfast_text, parse_mode='HTML')

async def lunch(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —à–∞–±–ª–æ–Ω –¥–ª—è –æ–±–µ–¥–∞."""
    lunch_text = (
        "–ù–µ –∑–∞–±—É–¥—å —Å–∫–æ—Ä—Ä–µ–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –¥–∞–Ω–Ω—ã–µ –Ω–∞ —Å–≤–æ–∏!\n\n\n"
        "–ü–†–ï–î–í–ê–†–ò–¢–ï–õ–¨–ù–´–ô –û–¢–ß–Å–¢ 26.06.2025\n\n"
        "–õ–∏–¥—ã: 10\n"
        "–¢—Ä–∞—Ñ–∏–∫: 01:54:39\n"
        "–ö–ó: 172\n\n"
        "#<b>–ò–º—è–§–∞–º–∏–ª–∏—è</b>\n"
        "#–ê–ª–µ–∫—Å–µ–π\n"
        "@Aleksei_Li_Radievich\n"
        "@–õ–æ–≥–∏–Ω —Ç–∏–º–ª–∏–¥–∞ –≤ –¢–ì (–µ—Å–ª–∏ –µ—Å—Ç—å)"
    )
    await update.message.reply_text(lunch_text, parse_mode='HTML')

async def dinner(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —à–∞–±–ª–æ–Ω –¥–ª—è —É–∂–∏–Ω–∞."""
    dinner_text = (
        "–ù–µ –∑–∞–±—É–¥—å —Å–∫–æ—Ä—Ä–µ–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –¥–∞–Ω–Ω—ã–µ –Ω–∞ —Å–≤–æ–∏!\n\n\n"
        "–û–¢–ß–Å–¢ 26.06.2025\n\n"
        "–õ–∏–¥—ã: 22\n"
        "–¢—Ä–∞—Ñ–∏–∫: 03:47:56\n"
        "–ö–ó: 288\n\n"
        "–í—Ä–µ–º—è –ø—Ä–∏—Ö–æ–¥–∞: 8:30\n"
        "–í—Ä–µ–º—è —É—Ö–æ–¥–∞: 18:00\n\n"
        "<b>#–ò–º—è–§–∞–º–∏–ª–∏—è</b>\n"
        "#–ê–ª–µ–∫—Å–µ–π\n"
        "#–æ—Ç—á–µ—Ç–û–¢–ú\n"
        "@Aleksei_Li_Radievich\n"
        "@–õ–æ–≥–∏–Ω —Ç–∏–º–ª–∏–¥–∞ –≤ –¢–ì (–µ—Å–ª–∏ –µ—Å—Ç—å)"
    )
    await update.message.reply_text(dinner_text, parse_mode='HTML')

async def admin(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –ø–æ–¥—Å–∫–∞–∑–∫—É –ø–æ –∫–æ–º–∞–Ω–¥–∞–º."""
    admin_hint_text = (
        "<b>‚öôÔ∏è –ü–æ–¥—Å–∫–∞–∑–∫–∞ –ø–æ –∫–æ–º–∞–Ω–¥–∞–º</b>\n\n"
        "‚Ä¢ /start - –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ\n"
        "‚Ä¢ /menu - –æ—Å–Ω–æ–≤–Ω–æ–µ –º–µ–Ω—é —Å –∫–Ω–æ–ø–∫–∞–º–∏\n"
        "‚Ä¢ /breakfast - —à–∞–±–ª–æ–Ω —É—Ç—Ä–µ–Ω–Ω–µ–≥–æ –æ—Ç—á–µ—Ç–∞\n"
        "‚Ä¢ /lunch - —à–∞–±–ª–æ–Ω –¥–Ω–µ–≤–Ω–æ–≥–æ –æ—Ç—á–µ—Ç–∞\n"
        "‚Ä¢ /dinner - —à–∞–±–ª–æ–Ω –≤–µ—á–µ—Ä–Ω–µ–≥–æ –æ—Ç—á–µ—Ç–∞\n"
    )
    await update.message.reply_text(admin_hint_text, parse_mode='HTML')


def main() -> None:
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞."""
    application = Application.builder().token(BOT_TOKEN).build()

    # --- –†–ï–ì–ò–°–¢–†–ê–¶–ò–Ø –û–ë–†–ê–ë–û–¢–ß–ò–ö–û–í ---
    application.add_handler(CommandHandler("start", start))
    application.add_handler(CallbackQueryHandler(button_callback)) # –ù–æ–≤—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–æ–∫
    application.add_handler(CommandHandler("menu", menu))
    application.add_handler(CommandHandler("breakfast", breakfast))
    application.add_handler(CommandHandler("lunch", lunch))
    application.add_handler(CommandHandler("dinner", dinner))
    application.add_handler(CommandHandler("admin", admin))
    
    print("–ë–æ—Ç —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω...")
    application.run_polling()

if __name__ == "__main__":
    main()
